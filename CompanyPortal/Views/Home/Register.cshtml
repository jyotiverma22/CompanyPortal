@model CompanyPortal.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="alignicon"> </h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SignIn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger error error2", @id = "validemail" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                <span class="error error2 text-danger" id = "validuser">This field is required</span>
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
           
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="SignIn" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/lib/js/site.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        
        $("#Username").focusout(function () {
            var user = $(this).val();

            //Checking the length of username
            if (user.length > 0) {
                if (user.length < 5) {
                    document.getElementById("validuser").innerHTML = "Username is too short";
                    $("#validuser").show();
                }
                else if (user.length > 20) {
                    document.getElementById("validuser").innerHTML = "Username is too long";
                    $("#validuser").show();
                }
                else {
                    //post to check is username already take

                    $.ajax({
                        url: '/api/values/checkusername',
                        method: 'POST',
                        content: 'application/json',
                        data: {
                            username: user                         
                        },
                        success: function (response) {
                            console.log(response);
                                },
                          error: function (jqXHR) {
                            console.log(jqXHR);
                            console.log("error in generating token");

                        }
                    });
                }
            }
            else {
                document.getElementById("validuser").innerHTML = "This field is required";
                $("#validuser").show();
                console.log("not getting values");  
            }
        });

        $("#Username").focusin(function () {
            $("#validuser").hide();
            document.getElementById("validuser").innerHTML = "";

        });


        $("#Email").focusout(function () {
            debugger
            var email = $(this).val();
            //Checking the length of username
            if (email.length > 0) {
                if (isEmail(email)) {
                    // check already exist email 

                    $.ajax({
                        url: '/api/values/checkEmailAddress',
                        method: 'POST',
                        content: 'application/json',
                        data: {
                            Email: email
                        },
                        success: function (response) {
                            console.log(response);
                        },
                          error: function (jqXHR) {
                            console.log(jqXHR);
                            console.log("error in generating token");

                        }
                    });
                }
                else {
                    document.getElementById("validemail").innerHTML = "Please enter valid email Address";
                    $("#validemail").show();
                }
            }
            else {
                document.getElementById("validemail").innerHTML = "This field is required";
                $("#validemail").show();
            }
        });

        $("#Email").focusin(function () {
            $("#validemail").hide();
            document.getElementById("validuser").innerHTML = "";

        });



    });


</script>
